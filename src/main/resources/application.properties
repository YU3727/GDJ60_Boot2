#dev.properties 파일 불러오기
#spring.profiles.active=prod
spring.config.import=classpath:application-dev.properties

#port
server.port=80

#Encoding 설정
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true

#jsp 경로설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp



##log level
##info 단계 이상의 로그만 표시하게끔 함.(배포 할때는 warn 또는 info이상으로)
logging.level.root=info
#logging.pattern.console=%msg%n


### FileUpload
## Multipart 사용 여부
spring.servlet.multipart.enabled=true
## 파일 하나당 최대 크기 설정
spring.servlet.multipart.max-file-size=10MB
## 총 파일 최대 크기 설정
spring.servlet.multipart.max-request-size=50MB


##파일 저장 경로. 우리가 만든 key도 사용 가능하다.(app.upload.notice라는 키는 없음..)
##뒤의 경로는 배포시, 서버마다 다르기 때문에 바꿔줘야한다.
##경로구분도 os마다 다름. 윈도우(\), 리눅스(/) 등
app.upload=D:/production/upload/
app.upload.notice=D:/production/upload/notice
app.upload.qna=D:/production/upload/qna


####WebConfig에서 사용할 내용
##요청이 발생 했을 때 URL과 Local 경로를 Mapping 해 주어야 함
app.upload.base=file:///D:/production/upload/
##입력 url 주소('/ 밑에 file로 들어오는 url은 위의 경로로 가서 찾으세요'의 의미)
app.url.path=/file/**

##Transaction 처리
spring.aop.proxy-target-class=true


## message 설정
spring.messages.basename=messages/message
spring.messages.encoding=UTF-8
## 없는 키를 쓰는경우 에러, true는 없는 키가 들어온 경우, 키를 출력하겠다는 의미
spring.messages.use-code-as-default-message=false
##초단위, message 파일의 변경을 초단위로 감지한다. 너무 짧으면 자원의 낭비가 발생할 수 있음
spring.messages.cache-duration=600
